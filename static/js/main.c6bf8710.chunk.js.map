{"version":3,"sources":["App.js","index.js"],"names":["languages","code","name","country_code","App","useState","countriesName","setContriesName","population","setPopulation","countriesList","setCountriesList","newPopulation","setNewPopulation","useEffect","Axios","get","then","response","data","t","useTranslation","releaseDate","Date","timeDifference","number_of_days","Math","floor","className","type","id","data-bs-toggle","aria-expanded","aria-labelledby","map","class","onClick","i18next","changeLanguage","onChange","e","target","value","Button","variant","post","val","country","delete","put","i18n","use","initReactI18next","LanguageDetector","HttpApi","init","supportedLngs","fallbackLng","detection","order","caches","backend","loadPath","loadingMarkup","ReactDOM","render","fallback","document","getElementById"],"mappings":"2PAUMA,EAAY,CAChB,CACEC,KAAM,KACNC,KAAM,UACNC,aAAc,MAEhB,CACEF,KAAM,KACNC,KAAM,SACNC,aAAc,MAEhB,CACEF,KAAM,KACNC,KAAM,cACNC,aAAc,MAEhB,CACEF,KAAM,KACNC,KAAM,6CACNC,aAAc,OA4KHC,MAxKf,WAME,MAAyCC,mBAAS,IAAlD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEA,EAA0CN,mBAAS,IAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACRC,IAAMC,IAAI,iCAAiCC,MAAK,SAACC,GAC/CP,EAAiBO,EAASC,WAE3B,IAEH,IA6BQC,EAAMC,cAAND,EAEFE,EAAc,IAAIC,KAAK,cACvBC,EAAiB,IAAID,KAASD,EAC9BG,EAAiBC,KAAKC,MAAMH,EAAc,OAEhD,OACE,sBAAKI,UAAU,MAAf,UACG,IACD,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,WAAf,UACE,wBACEA,UAAU,oCACVC,KAAK,SACLC,GAAG,sBACHC,iBAAe,WACfC,gBAAc,QALhB,sBAUA,oBAAIJ,UAAU,gBAAgBK,kBAAgB,sBAA9C,SACGjC,EAAUkC,KAAI,gBAAGjC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACb,6BACE,yBACEgC,MAAM,gBACNC,QAAS,kBAAMC,IAAQC,eAAerC,IAFxC,UAIE,sBACE2B,UAAS,8BAAyBzB,EAAzB,WACF,IACRD,MARIC,aAgBjB,qBAAKyB,UAAU,wCACf,oBAAIA,UAAU,sCAAd,SACGR,EAAE,qBAGL,mBAAGQ,UAAU,cAAb,SACGR,EAAE,qBAAsB,CAAEK,wBAG/B,sBAAKG,UAAU,iBAAf,UACE,qBAAIA,UAAU,mBAAd,UACGR,EAAE,WADL,IACiB,sBAAMe,MAAM,2BAE7B,uBACEP,UAAU,eACV1B,KAAK,gBACL2B,KAAK,OACLU,SAAU,SAACC,GACTjC,EAAgBiC,EAAEC,OAAOC,UAI7B,qBAAId,UAAU,mBAAd,UACGR,EAAE,cADL,IACoB,sBAAMe,MAAM,2BAEhC,uBACEP,UAAU,eACVC,KAAK,SACL3B,KAAK,sBACLqC,SAAU,SAACC,GACT/B,EAAc+B,EAAEC,OAAOC,UAG3B,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUR,QAtGX,WACnBrB,IAAM8B,KAAK,mCAAoC,CAC7CvC,cAAeA,EACfE,WAAYA,IAGdG,EAAiB,GAAD,mBACXD,GADW,CAEd,CAAEJ,cAAeA,EAAeE,WAAYA,OA8F1C,SACGY,EAAE,YAGJV,EAAcwB,KAAI,SAACY,GAClB,OACE,qBAAKlB,UAAU,QAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAIA,UAAU,cAAd,UACGkB,EAAIxC,cADP,MACyBwC,EAAItC,gBAG/B,sBAAKoB,UAAU,UAAf,UACE,cAACe,EAAA,EAAD,CACEC,QAAQ,SACRhB,UAAU,eACVQ,QAAS,WAzGL,IAACW,IA0GWD,EAAIxC,cAzGpCS,IAAMiC,OAAN,2CAAiDD,KAqGnC,SAOG3B,EAAE,YAEL,uBACES,KAAK,OACLC,GAAG,mBACHS,SAAU,SAACC,GACT3B,EAAiB2B,EAAEC,OAAOC,UAG9B,eAACC,EAAA,EAAD,CACEP,QAAS,WAjHF,IAACW,IAkHWD,EAAIxC,cAjHvCS,IAAMkC,IAAI,mCAAoC,CAC5C3C,cAAeyC,EACfvC,WAAYI,IAEdC,EAAiB,KA2GH,UAKG,IACAO,EAAE,+B,eC7KvB8B,IACGC,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJC,cAAe,CAAC,KAAM,KAAM,KAAM,MAElCC,YAAa,KACbC,UAAW,CACTC,MAAO,CACL,SACA,UACA,eACA,iBACA,YACA,cACA,OACA,aAEFC,OAAQ,CAAC,WAEXC,QAAS,CACPC,SAAU,6CAIhB,IAAMC,EACJ,qBAAKnC,UAAU,mBAAf,SACE,8CAIJoC,IAASC,OACP,cAAC,WAAD,CAAUC,SAAUH,EAApB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.c6bf8710.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.js\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport { Suspense } from \"react\";\n\nconst languages = [\n  {\n    code: \"en\",\n    name: \"English\",\n    country_code: \"gb\",\n  },\n  {\n    code: \"hu\",\n    name: \"Magyar\",\n    country_code: \"hu\",\n  },\n  {\n    code: \"fr\",\n    name: \"Français\",\n    country_code: \"fr\",\n  },\n  {\n    code: \"ar\",\n    name: \"العربية\",\n    country_code: \"sa\",\n  },\n];\n\nfunction App() {\n  // /// Translation\n  // const { t } = useTranslation();\n\n  // //////\n\n  const [countriesName, setContriesName] = useState(\"\");\n  const [population, setPopulation] = useState(\"\");\n  const [countriesList, setCountriesList] = useState([]);\n\n  const [newPopulation, setNewPopulation] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3003/api/get\").then((response) => {\n      setCountriesList(response.data);\n    });\n  }, []);\n\n  const submitReview = () => {\n    Axios.post(\"http://localhost:3003/api/insert\", {\n      countriesName: countriesName,\n      population: population,\n    });\n    // Add Countries without refesh\n    setCountriesList([\n      ...countriesList,\n      { countriesName: countriesName, population: population },\n    ]);\n  };\n\n  // Delete a country from the browser connected to the data base\n\n  const deleteCountry = (country) => {\n    Axios.delete(`http://localhost:3003/api/delete/${country}`);\n  };\n\n  // Update a country from the browser connected to the data base\n\n  const updatePopulation = (country) => {\n    Axios.put(\"http://localhost:3003/api/update\", {\n      countriesName: country,\n      population: newPopulation,\n    });\n    setNewPopulation(\"\");\n  };\n\n  // Page in different language\n  const { t } = useTranslation();\n\n  const releaseDate = new Date(\"2021-05-08\");\n  const timeDifference = new Date() - releaseDate;\n  const number_of_days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n\n  return (\n    <div className=\"App\">\n      {\" \"}\n      <div className=\"container\">\n        <div className=\"d-flex justify-content-end\">\n          <div className=\"dropdown\">\n            <button\n              className=\"btn btn-secondary dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton1\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n            >\n              language\n            </button>\n\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {languages.map(({ code, name, country_code }) => (\n                <li key={country_code}>\n                  <button\n                    class=\"dropdown-item\"\n                    onClick={() => i18next.changeLanguage(code)}\n                  >\n                    <span\n                      className={`flag-icon flag-icon-${country_code} mx-2`}\n                    ></span>{\" \"}\n                    {name}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"d-flex flex-column align-item-start\"></div>\n        <h1 className=\"font-weight-normal mb-3 welcometext\">\n          {t(\"welcome_message\")}\n        </h1>\n\n        <p className=\"instruction\">\n          {t(\"days_since_release\", { number_of_days })}\n        </p>\n      </div>\n      <div className=\"form container\">\n        <h4 className=\"countryinputtext\">\n          {t(\"country\")} <span class=\"label label-default\"></span>\n        </h4>\n        <input\n          className=\"countryInput\"\n          name=\"countriesName\"\n          type=\"text\"\n          onChange={(e) => {\n            setContriesName(e.target.value);\n          }}\n        />\n\n        <h4 className=\"countryinputtext\">\n          {t(\"population\")} <span class=\"label label-default\"></span>\n        </h4>\n        <input\n          className=\"countryInput\"\n          type=\"number\"\n          name=\"countriesPopulation\"\n          onChange={(e) => {\n            setPopulation(e.target.value);\n          }}\n        />\n        <Button variant=\"success\" onClick={submitReview}>\n          {t(\"submit\")}\n        </Button>\n\n        {countriesList.map((val) => {\n          return (\n            <div className=\"cards\">\n              <div className=\"card card1\">\n                <div className=\"containers\">\n                  <h2 className=\"countrytext\">\n                    {val.countriesName} | {val.population}\n                  </h2>\n                </div>\n                <div className=\"details\">\n                  <Button\n                    variant=\"danger\"\n                    className=\"deletebutton\"\n                    onClick={() => {\n                      deleteCountry(val.countriesName);\n                    }}\n                  >\n                    {t(\"delete\")}\n                  </Button>\n                  <input\n                    type=\"text\"\n                    id=\"updatePopulation\"\n                    onChange={(e) => {\n                      setNewPopulation(e.target.value);\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      updatePopulation(val.countriesName);\n                    }}\n                  >\n                    {\" \"}\n                    {t(\"update\")}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nimport App from \"./App\";\nimport \"./App.css\";\n\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { Suspense } from \"react\";\n\n// i18n used for the language translation\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector)\n  .use(HttpApi)\n  .init({\n    supportedLngs: [\"en\", \"hu\", \"fr\", \"ar\"],\n    // lng: document.querySelector(\"html\").lang,\n    fallbackLng: \"en\",\n    detection: {\n      order: [\n        \"cookie\",\n        \"htmlTag\",\n        \"localStorage\",\n        \"sessionStorage\",\n        \"navigator\",\n        \"querystring\",\n        \"path\",\n        \"subdomain\",\n      ],\n      caches: [\"cookie\"],\n    },\n    backend: {\n      loadPath: \"/assets/locals/{{lng}}/translation.json\",\n    },\n  });\n\nconst loadingMarkup = (\n  <div className=\"py-4 text-center\">\n    <h2>Loading...</h2>\n  </div>\n);\n\nReactDOM.render(\n  <Suspense fallback={loadingMarkup}>\n    <App />\n  </Suspense>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}